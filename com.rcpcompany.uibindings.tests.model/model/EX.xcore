@Ecore(nsPrefix="tm", nsURI="http://rcp-company.com/schemas/uibindings/testModel")
@GenModel(nonNLSMarkers="true", classPackageSuffix="internal", adapterFactory="false",
		classNamePattern="{0}Impl", interfaceNamePattern="{0}", suppressEMFModelTags="true",
		fileExtensions="aserver", suppressGenModelAnnotations="false", language="",
		prefix="TestModel", modelName="TestModel", codeFormatting="true", redirection="",
		updateClasspath="false", containmentProxies="false")
package com.rcpcompany.uibinding.tests.model

import java.math.BigDecimal
import java.math.BigInteger

annotation "http://rcp-company.com/schemas/uibindings" as uibindings

type EDate wraps java.util.Date
type EBigDecimal wraps BigDecimal
type EBigInteger wraps BigInteger

@uibindings(foobar_Sequence_all="TestObject (annotation)",
	foobar_Sequence_parent="TestObject (annotation)",
	foobar_Sequence_targetType="TestObject (annotation)",
	foobar_Sequence_containingClass="TestObject (annotation)",
	foobar_Sequence_default="TestObject (annotation)" 
)
class TestObject {
	unique unsettable int number = "0"
	unique double d
	unique float f
	EDate date
	@uibindings(foobar_Sequence_all="TestObject.text (annotation)",
		foobar_Sequence_parent="TestObject.text (annotation)",
		foobar_Sequence_targetType="TestObject.text (annotation)",
		foobar_Sequence_containingClass="TestObject.text (annotation)",
		foobar_Sequence_default="TestObject.text (annotation)" 
	)
	String text
	refers TestContainer parent
	boolean b
	AmountAndCurrencyStruct ac
	WeightUnit unit
	TimeUnit timeUnit
	byte ^byte
	@uibindings(foobar="b")
	short ^short
	long ^long
	EBigDecimal bigDecimal
	EBigInteger bigInteger
}

@uibindings(foobar_Sequence_all="SubTestObject (annotation)",
	foobar_Sequence_parent="SubTestObject (annotation)",
	foobar_Sequence_targetType="SubTestObject (annotation)",
	foobar_Sequence_containingClass="SubTestObject (annotation)",
	foobar_Sequence_default="SubTestObject (annotation)",
	text.foobar_Sequence_all="SubTestObject.text (annotation)",
	text.foobar_Sequence_parent="SubTestObject.text (annotation)",
	text.foobar_Sequence_targetType="SubTestObject.text (annotation)",
	text.foobar_Sequence_containingClass="SubTestObject.text (annotation)",
	text.foobar_Sequence_default="SubTestObject.text (annotation)"
)
class SubTestObject extends TestObject {
	
}

@uibindings(foobar_Sequence_all="TestContainer (annotation)",
	foobar_Sequence_parent="TestContainer (annotation)",
	foobar_Sequence_targetType="TestContainer (annotation)",
	foobar_Sequence_containingClass="TestContainer (annotation)",
	foobar_Sequence_default="TestContainer (annotation)" 
)
class TestContainer {
	refers TestObject[*] children
	@uibindings(foobar_Sequence_all="TestContainer.current (annotation)",
		foobar_Sequence_parent="TestContainer.current (annotation)",
		foobar_Sequence_targetType="TestContainer.current (annotation)",
		foobar_Sequence_containingClass="TestContainer.current (annotation)",
		foobar_Sequence_default="TestContainer.current (annotation)" 
	)
	refers unsettable TestObject current
}

class AmountAndCurrency {
	float amount
	String currency
}

enum WeightUnit {
	G = 0
	KG = 1
	Tonne as "TONNE" = 2
}

enum TimeUnit {
	SEC = 0
	MIN = 1
}

@uibindings(foobar="c")
type AmountAndCurrencyStruct wraps com.rcpcompany.uibinding.tests.model.AmountAndCurrencyOld

class TestGrid {
	refers TestGridColumn[*] columns opposite grid
	refers TestGridRow[*] rows opposite grid
}

class TestGridColumn {
	refers TestGrid grid opposite columns
	String name
	refers TestGridCell[*] cells opposite column
}

class TestGridRow {
	refers TestGrid grid opposite rows
	int number
	refers TestGridCell[*] cells opposite row
}

class TestGridCell {
	String details
	float price
	refers TestGridColumn column opposite cells
	refers TestGridRow row opposite cells
}

// EOF