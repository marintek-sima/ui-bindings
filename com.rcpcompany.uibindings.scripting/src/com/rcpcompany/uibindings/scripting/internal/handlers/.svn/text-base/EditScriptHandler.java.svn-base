package no.marintek.sima.script.handlers;

import no.marintek.sima.MOAO;
import no.marintek.sima.ScriptManager;
import no.marintek.sima.ScriptableValue;
import no.marintek.sima.Task;
import no.marintek.sima.model.utility.MOAOUtil;
import no.marintek.sima.script.bindings.ScriptableValueEditorDialog;

import org.eclipse.core.commands.AbstractHandler;
import org.eclipse.core.commands.ExecutionEvent;
import org.eclipse.core.commands.ExecutionException;
import org.eclipse.core.commands.IHandler;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.ui.handlers.HandlerUtil;

import com.rcpcompany.uibindings.IBinding;
import com.rcpcompany.uibindings.IValueBinding;

/**
 * Edits the current binding in a scriptable value editor.
 * 
 * @author Tonny Madsen, The RCP Company
 */
public class EditScriptHandler extends AbstractHandler implements IHandler {
	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		final Shell shell = HandlerUtil.getActiveShellChecked(event);
		/*
		 * Find the binding and the object in question
		 */
		final Object binding = HandlerUtil.getVariableChecked(event, IBinding.SOURCES_ACTIVE_BINDING);
		if (!(binding instanceof IValueBinding)) {
			return null;
		}
		final IValueBinding vb = (IValueBinding) binding;
		if (!(vb.getModelObject() instanceof MOAO)) {
			return null;
		}
		final MOAO moao = (MOAO) vb.getModelObject();

		/*
		 * Find the task
		 */
		final Task task = MOAOUtil.findTaskOfObject(moao);
		if (task == null) {
			return null;
		}

		/*
		 * and the scriptable value for the element...
		 */
		final ScriptManager manager = task.getScriptManager();
		String feature = vb.getModelFeature().getName();
		final ScriptableValue value = manager.getCreateScriptableValue(moao, feature);
		final String oldScript = value.getScript();

		/*
		 * Create and open the dialog
		 */
		final ScriptableValueEditorDialog dialog = new ScriptableValueEditorDialog(shell, value);
		final int result = dialog.open();
		switch (result) {
		case ScriptableValueEditorDialog.OK:
			break;
		case ScriptableValueEditorDialog.CANCEL:
			if (oldScript==null || oldScript.equals("")) {
				manager.deleteScript(moao, feature);
			} else {
				value.setScript(oldScript);
			}
			break;
		case ScriptableValueEditorDialog.USE_VALUE:
			// The value has already been set, so we just need to delete the script...
			manager.deleteScript(moao, feature);
			break;
		}

		vb.updateBinding();

		return null;
	}
}
